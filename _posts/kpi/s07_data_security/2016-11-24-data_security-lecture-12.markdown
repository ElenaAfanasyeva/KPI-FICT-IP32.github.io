---
layout: post
title: "Лекція 12. Al-gamal. B-Crypt"
date: 2016-11-24 14:45:02 +0200
categories: kpi_s07_data_security
---

## Al-gamal

Є користувач і адміністратор. Для них є 4 ключі

1. Закритий ключ користувача $$K^{з}_{п} = \alpha$$
2. Відкритий ключ користувача $$K^{в}_{п} = q ^ {\alpha} \mod p$$
3. Закритий ключ адміністратора $$K^{з}_{п} = \beta$$
4. Відкритий ключ адміністратора $$K^{в}_{п} = q ^ {\beta} \mod p$$


Після того, як _p_ і _q_ передані та ключі сформовані, користувач обчислює свою маску

$$ M_{п} = (K^{в}_{а}) ^ { K^{з}_{п} } = (q^{\beta} \mod p)^{\alpha} = q^{\beta \cdot \alpha} \mod p $$

Адміністратор, в свою чергу обчислює свою маску

$$ M_{а} = (K^{в}_{п}) ^ { K^{з}_{а} } = (q^{\alpha} \mod p)^{\beta} = q^{\alpha \cdot \beta} \mod p $$

Звідси $$ M_{а} = M_{п} $$

Тоді шифрування має вигляд

$$ S = S_1 \cup S_2 \cup … \cup S_n $$

$$ S_i vs M_{а_{п}} = C_i $$
$$ C_i vs M_{п_{а}} = S_i $$

Алгоритм Al-gamal розроблявся, як деяка спрощена версія RSA, що дозволяла шифрувати повідомлення в рази швидше. Втім цей алгоритм вимагав захищеного каналу (разового) для передачі _p_ і _q_.
Практика сьогодення показує, що вимоги до швидкості RSA знизилися, а сучасні засоби дозволяють швидко зламати алгоритм Al-gamal. Тому наразі необхідність у цьому алгоритмі відпала.


## Сьогодення

- В асиметричній криптографії де-факто існує стандарт -- алгоритм RSA
- Для невеликих обсягів інформації (до 1МБ) бажано використовувати асиметричне шифрування.
- На обсягах інформації 1МБ і більше асиметричне шифрування працює повільно, тому має сенс використання симетричного шифрування (DES, AES, ...)


## Потокові криптосистеми

Якщо необхідно зашифрувати потік даних в реальному часі (наприклад, відеопотік), використовують потокові криптосистеми.

## Алгоритм B-Crypt

- Шифрування відбувається побітно

```
IV   +---------------+      +---------------+  IV
---->|               |      |               |---->
K    |  Mask Former  |      |  Mask Former  |   K
---->|               |      |               |---->
     +---------------+      +---------------+
          |                          |
          /1                         |
          |                          |
          v                          V
D       +---+           CD         +---+
------->| + |>-------------------->| + |----------->D
010110  +---+                      +---+
```

Тут:

- IV -- Initial Vector
- K -- ключ
- D -- потік даних
- CD -- зашифрований потік даних

# Розділ №4. Протоколи автентикації в КСС

```
          (Z)
            \
             V
         ///// ////// ///// ///// //
(A)---> ////// Комутаційне Поле ///// --->(B)
         //// /// /// /// /// /// //

```

## 4.1. Класифікація протоколів автентикації в КСС

Перед безосередньо передачею даних, суб'єкт проходить процедуру автентикації.

Протоколи автентикації поділяються на

- Протоколи автентикації з посередником СБ (з ЦРК -- центром розподілу ключів)
  - Протоколи автентикації суб'єктів
    - На основі симетричних криптосистем (AES)
    - На основі асиметричних криптосистем (RSA)
  - Протоколи автентикації повідомлень
    - На основі симетричних криптосистем (AES)
    - На основі асиметричних криптосистем (RSA)
- Протоколи автентикації без посередника (без ЦРК)

У випадку протоколів з ЦРК відповідальність за розподіл ключів, безпеку, тощо несе ЦРК.
